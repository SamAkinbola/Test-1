name: CI RUN

# Controls when the workflow will run
on:
  # Triggers the workflow only on push to the Test branch
  push:
    branches:
      - Test

  # Allows manual triggering from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

    steps:
      # Checks out the repository code
      - uses: actions/checkout@v3

      # Install SnowSQL
      - name: Install SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
          SNOWSQL_DEST=~/bin bash snowsql-1.2.9-linux_x86_64.bash

      # Upload all SQL files from Database folder to Snowflake stage
      - name: Upload SQL files from Database folder to Snowflake stage
        run: |
          for file in Database/*.sql; do
            if [ -f "$file" ]; then
              /bin/snowsql -q "put file://$(pwd)/$file @/${{ github.ref_name }}/database overwrite=true" -o friendly=false
            fi
          done

      # Execute all SQL files from Database folder in Snowflake
      - name: Execute SQL files from Database folder
        run: |
          for file in Database/*.sql; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              /bin/snowsql -q "execute script @/${{ github.ref_name }}/database/$filename" -o friendly=false
            fi
          done
        continue-on-error: true # Optional: Continue if execution fails
